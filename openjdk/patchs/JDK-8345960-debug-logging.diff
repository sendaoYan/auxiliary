diff --git a/test/jdk/sun/net/www/protocol/http/RetryUponTimeout.java b/test/jdk/sun/net/www/protocol/http/RetryUponTimeout.java
index b2214780c2e..42e773467d2 100644
--- a/test/jdk/sun/net/www/protocol/http/RetryUponTimeout.java
+++ b/test/jdk/sun/net/www/protocol/http/RetryUponTimeout.java
@@ -26,21 +26,38 @@
  * @bug 4772077
  * @library /test/lib
  * @summary  using defaultReadTimeout appear to retry request upon timeout
+ * @run main/othervm RetryUponTimeout
  */
 
 import java.net.*;
 import java.io.*;
+import java.util.logging.ConsoleHandler;
+import java.util.logging.Handler;
+import java.util.logging.Level;
+import java.util.logging.Logger;
 
 import jdk.test.lib.net.HttpHeaderParser;
 import jdk.test.lib.net.URIBuilder;
 
 public class RetryUponTimeout implements Runnable {
+
+    private static final Logger logger = Logger.getLogger("sun.net.www.protocol.http.HttpURLConnection");
+
+    static {
+        // enable logging of HttpURLConnection internals
+        logger.setLevel(Level.ALL);
+        Handler h = new ConsoleHandler();
+        h.setLevel(Level.ALL);
+        logger.addHandler(h);
+    }
+
     // run server
     public void run(){
         Socket socket = null;
         try {
             for (int i = 0; i < 2; i++) {
                 socket = server.accept();
+                System.err.println("accepted connection " + i + " from " + socket);
                 InputStream is = socket.getInputStream ();
                 HttpHeaderParser header = new HttpHeaderParser (is);
                 count++;
@@ -69,6 +86,7 @@ public static void main(String[] args) throws Exception {
                 .scheme("http")
                 .loopback()
                 .port(port)
+                .path("/" + System.nanoTime())
                 .toURL();
             System.out.println("URL: " + url);
             java.net.URLConnection uc = url.openConnection();
